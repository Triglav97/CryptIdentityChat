// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kursach;

namespace kursach.Migrations
{
    [DbContext(typeof(VdbContext))]
    [Migration("20201123151904_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("kursach.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("kursach.CryptKey", b =>
                {
                    b.Property<int>("CryptkeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("decryptKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("encryptKey")
                        .HasColumnType("TEXT");

                    b.HasKey("CryptkeyId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("CryptKeys");
                });

            modelBuilder.Entity("kursach.CryptMessage", b =>
                {
                    b.Property<int>("CryptMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("cryptmessage")
                        .HasColumnType("TEXT");

                    b.HasKey("CryptMessageId");

                    b.HasIndex("AccountId");

                    b.ToTable("CryptMessages");
                });

            modelBuilder.Entity("kursach.CryptKey", b =>
                {
                    b.HasOne("kursach.Account", "Account")
                        .WithOne("CryptKey")
                        .HasForeignKey("kursach.CryptKey", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("kursach.CryptMessage", b =>
                {
                    b.HasOne("kursach.Account", "Account")
                        .WithMany("CryptMessages")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("kursach.Account", b =>
                {
                    b.Navigation("CryptKey");

                    b.Navigation("CryptMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
